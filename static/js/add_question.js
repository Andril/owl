// Generated by CoffeeScript 1.3.3
(function() {
  var ans_types, change_ans_type, get_ans_template, parse, render_ans;

  parse = {
    _question: function() {
      var question, res, subject, theme, type;
      type = $(':input#type').val();
      theme = $(':input#theme').val();
      subject = $(':input#subject').val();
      question = $(':input#question').val();
      return res = {
        theme: theme,
        subject: subject,
        question: question,
        type: type
      };
    },
    many_ans: function() {
      var answer, answers, q, res, tmp_ans, tmp_right, _i, _len;
      res = this._question();
      tmp_ans = $(':input.answer');
      tmp_right = $(':input.right');
      answers = [];
      for (_i = 0, _len = tmp_ans.length; _i < _len; _i++) {
        answer = tmp_ans[_i];
        q = $(answer).data('a');
        answers[q] = {
          text: answer.value,
          right: false
        };
      }
      res.answers = answers;
      return JSON.stringify(res);
    },
    one_ans: function() {
      var answer, answers, res, right, tmp_ans, _i, _len;
      res = this._question();
      right = $(':input.right:checked').data('a');
      tmp_ans = $(':input.answer');
      answers = [];
      for (_i = 0, _len = tmp_ans.length; _i < _len; _i++) {
        answer = tmp_ans[_i];
        answers.push(answer.value);
      }
      res.answers = answers;
      res.right = right;
      return JSON.stringify(res);
    },
    text_ans: function() {
      var answer, answers, res, tmp_ans, _i, _len;
      res = this._question();
      tmp_ans = $(':input.answer');
      answers = [];
      for (_i = 0, _len = tmp_ans.length; _i < _len; _i++) {
        answer = tmp_ans[_i];
        answers.push(answer.value);
      }
      res.answers = answers;
      return JSON.stringify(res);
    },
    free_ans: function() {
      var res;
      res = this._question();
      return JSON.stringify(res);
    }
  };

  ans_types = {
    many_ans: "many_ans",
    one_ans: "one_ans",
    text_ans: "text_ans",
    free_ans: "free_ans"
  };

  get_ans_template = function(type, val) {
    switch (type) {
      case "many_ans":
        return "<div class='answer'>				<label>Answer " + (val + 1) + ":</label><br>				<input type='text' class='answer' data-a='" + val + "'>				<input type='checkbox' class='right' data-a='" + val + "'>			</div>";
      case "one_ans":
        return "<div class='answer'>				<label>Answer " + (val + 1) + ":</label><br>				<input type='text' class='answer' data-a='" + val + "'>				<input type='radio' name='ans_group' class='right' data-a='" + val + "'>			</div>";
      case "text_ans":
        return "<div class='answer'>				<label>Answer " + (val + 1) + ":</label><br>				<input type='text' class='answer' data-a='" + val + "'>			</div>";
      case "free_ans":
        return "";
      default:
        return "";
    }
  };

  render_ans = function(type, val) {
    return $('div#answers').append(get_ans_template(type, val));
  };

  change_ans_type = function(type) {
    $('div#answers').empty();
    return render_ans(type, 0);
  };

  $(document).ready(function() {
    var _type;
    _type = ans_types.many_ans;
    change_ans_type(_type);
    $(':input#type').change(function() {
      var val;
      val = $(this).val();
      _type = ans_types[val];
      if (_type === void 0) {
        _type = ans_types.many_ans;
      }
      return change_ans_type(_type);
    });
    $('button#submit').click(function(event) {
      var res;
      event.preventDefault();
      res = parse[_type]();
      console.log(res);
      return $.ajax({
        type: 'POST',
        contentType: 'application/json; charset=utf-8;',
        data: res,
        success: function(data) {
          console.log('ajax success');
          return console.log(data);
        },
        error: function() {
          return console.log('ajax error');
        }
      });
    });
    $('button#add').click(function(event) {
      var val;
      event.preventDefault();
      if (_type !== ans_types.free_ans) {
        val = parseInt($(':input.answer:last').data('a')) + 1;
        if (isNaN(val)) {
          val = 0;
        }
        return render_ans(_type, val);
      }
    });
    return $('button#remove').click(function(event) {
      event.preventDefault();
      return $('div.answer:last').remove();
    });
  });

}).call(this);
